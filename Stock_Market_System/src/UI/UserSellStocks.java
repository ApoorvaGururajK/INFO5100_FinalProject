/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.UserAuth;
import model.UserRegistrationDetails;
import model.UserSelectionDetails;

/**
 *
 * @author apoorvakulkarni
 */
public class UserSellStocks extends javax.swing.JFrame {

    /**
     * Creates new form UserSellStocks
     */
    public List<String> SelectCompany;
    public Map<String, List<Integer>> UserStockHistory;
    private int Current_Stock_price;
    private String Company_selected;
    private int No_of_Stocks_Owned;
    private Integer Total;
    private Integer newTotal;
    private int no_of_stocks_sell;
    UserSelectionDetails selections;
    UserRegistrationDetails newUser;
    private Integer Initial_wallet_balance;
    private Integer Stocks_of_Apple;
    private Integer Stocks_of_Microsoft;
    private Integer Stocks_of_Amazon;
    private Integer Stocks_of_Netflix;
    public Map<String, Integer> no_of_stocks_owned_company;
    public String UserID;
    
    public UserSellStocks() {
        initComponents();
    }
    
    public UserSellStocks(Map<String, Integer> no_of_stocks_owned_company, String UserID) {
        initComponents();
        this.no_of_stocks_owned_company = no_of_stocks_owned_company;
        System.out.println("Inside the UserSellStocks parameterized constructor");
        System.out.println("no_of_stocks_owned: " + this.no_of_stocks_owned_company);
        
        this.Stocks_of_Apple = 0;
        this.Stocks_of_Microsoft = 0;
        this.Stocks_of_Amazon = 0;
        this.Stocks_of_Netflix = 0;
        
        this.UserID = UserID;
        this.UserStockHistory = new HashMap<>();
        
        this.UserStockHistory.put("Apple", Arrays.asList(142, 0, 0));
        this.UserStockHistory.put("Microsoft", Arrays.asList(247, 0, 0));
        this.UserStockHistory.put("Amazon", Arrays.asList(90, 0, 0));
        this.UserStockHistory.put("Netflix", Arrays.asList(310, 0, 0));
        
        populateComboBox();
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        btnCalculateTotal1 = new javax.swing.JButton();
        labelAdminID3 = new javax.swing.JLabel();
        txtNoOfStocksSell = new javax.swing.JTextField();
        txtGetTotal = new javax.swing.JTextField();
        labelTitle = new javax.swing.JLabel();
        btnSellStocks = new javax.swing.JButton();
        labelAdminID2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnSignOut = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        btnCalculateTotal1.setBackground(new java.awt.Color(0, 0, 0));
        btnCalculateTotal1.setFont(new java.awt.Font("Inter", 1, 14)); // NOI18N
        btnCalculateTotal1.setForeground(new java.awt.Color(255, 255, 255));
        btnCalculateTotal1.setText("Calculate Total");
        btnCalculateTotal1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateTotal1ActionPerformed(evt);
            }
        });

        labelAdminID3.setFont(new java.awt.Font("Inter", 1, 14)); // NOI18N
        labelAdminID3.setText("No. of Stocks to sell:");

        txtNoOfStocksSell.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        txtNoOfStocksSell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNoOfStocksSellActionPerformed(evt);
            }
        });

        txtGetTotal.setFont(new java.awt.Font("Inter", 0, 14)); // NOI18N
        txtGetTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGetTotalActionPerformed(evt);
            }
        });

        labelTitle.setFont(new java.awt.Font("Inter", 1, 24)); // NOI18N
        labelTitle.setText("User Dashboard to sell Stocks");

        btnSellStocks.setBackground(new java.awt.Color(0, 0, 0));
        btnSellStocks.setFont(new java.awt.Font("Inter", 1, 14)); // NOI18N
        btnSellStocks.setForeground(new java.awt.Color(255, 255, 255));
        btnSellStocks.setText("Sell Stocks");
        btnSellStocks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSellStocksActionPerformed(evt);
            }
        });

        labelAdminID2.setFont(new java.awt.Font("Inter", 1, 14)); // NOI18N
        labelAdminID2.setText("Select a Company");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Company", "Price per stock", "No.of Stocks Owned", "Total Investment"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        btnSignOut.setBackground(new java.awt.Color(0, 0, 0));
        btnSignOut.setFont(new java.awt.Font("Inter", 1, 14)); // NOI18N
        btnSignOut.setForeground(new java.awt.Color(255, 255, 255));
        btnSignOut.setText("Sign Out");
        btnSignOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(203, 203, 203)
                            .addComponent(labelTitle))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(116, 116, 116)
                            .addComponent(labelAdminID2)
                            .addGap(18, 18, 18)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(labelAdminID3)
                                        .addGap(48, 48, 48))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnCalculateTotal1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(38, 38, 38)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnSellStocks, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtNoOfStocksSell, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtGetTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnSignOut, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 706, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(labelTitle)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelAdminID2))
                .addGap(46, 46, 46)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNoOfStocksSell, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelAdminID3))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtGetTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCalculateTotal1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(btnSellStocks, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(btnSignOut, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        this.Company_selected = (String) jComboBox1.getSelectedItem();
        System.out.println(this.Company_selected);
        populateTable(this.Company_selected);
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void populateTable(String Company_selected) {
//        System.out.println("Inside populate Table");
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
//        System.out.println("before");
        Object[] row = new Object[4];

        
            row[0] = this.Company_selected;
            row[1] = this.UserStockHistory.get(Company_selected).get(0); 
            this.Current_Stock_price = this.UserStockHistory.get(Company_selected).get(0); 
            try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/info5100_finalproject","root","Prithvi12*");
            Statement stm= con.createStatement();
            
            if (this.Company_selected == "Apple") {
                String dispSt="SELECT `Stocks_of_Apple`,`Initial Wallet Balance` FROM `info5100_finalproject`.`users`WHERE `UserID`='"+this.UserID+"'";
                ResultSet rs= stm.executeQuery(dispSt);
            
                if (rs.next()) {
                    this.No_of_Stocks_Owned = rs.getInt("Stocks_of_Apple");
                    this.Initial_wallet_balance=rs.getInt("Initial Wallet Balance");
                }
            }
            
            if (this.Company_selected == "Microsoft") {
                String dispSt="SELECT `Stocks_of_Microsoft`,`Initial Wallet Balance` FROM `info5100_finalproject`.`users`WHERE `UserID`='"+this.UserID+"'";
                ResultSet rs= stm.executeQuery(dispSt);
            
                if (rs.next()) {
                    this.No_of_Stocks_Owned = rs.getInt("Stocks_of_Microsoft");
                     this.Initial_wallet_balance=rs.getInt("Initial Wallet Balance");
                }
            }
            
            if (this.Company_selected == "Amazon") {
                String dispSt="SELECT `Stocks_of_Amazon`,`Initial Wallet Balance` FROM `info5100_finalproject`.`users`WHERE `UserID`='"+this.UserID+"'";
                ResultSet rs= stm.executeQuery(dispSt);
            
                if (rs.next()) {
                    this.No_of_Stocks_Owned = rs.getInt("Stocks_of_Amazon");
                     this.Initial_wallet_balance=rs.getInt("Initial Wallet Balance");
                }
            }
            
            if (this.Company_selected == "Netflix") {
                String dispSt="SELECT `Stocks_of_Netflix`,`Initial Wallet Balance` FROM `info5100_finalproject`.`users`WHERE `UserID`='"+this.UserID+"'";
                ResultSet rs= stm.executeQuery(dispSt);
            
                if (rs.next()) {
                    this.No_of_Stocks_Owned = rs.getInt("Stocks_of_Netflix");
                    this.Initial_wallet_balance=rs.getInt("Initial Wallet Balance");
                }
            }
            
            con.close(); 
            }
            catch(Exception e){
                System.out.println(e.getMessage());
            }
            
            
            row[2] = this.No_of_Stocks_Owned;
            row[3] = this.No_of_Stocks_Owned * this.Current_Stock_price;
            
            model.addRow(row);
        
        
        }
    
    private void populateComboBox() {
        DefaultComboBoxModel model1 = (DefaultComboBoxModel) jComboBox1.getModel();
        model1.addAll(this.UserStockHistory.keySet());
    }
    
    private void btnCalculateTotal1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateTotal1ActionPerformed
        // TODO add your handling code here:
        this.no_of_stocks_sell = Integer.parseInt(txtNoOfStocksSell.getText());
//        this.newUser.setNo_of_stocks_sell(this.no_of_stocks_sell);
        if (this.no_of_stocks_sell <= this.No_of_Stocks_Owned){
            this.Total = this.Current_Stock_price * this.no_of_stocks_sell;
            txtGetTotal.setText(this.Total.toString());
            this.Initial_wallet_balance = this.Initial_wallet_balance + this.Total;
        }
        else {
            JOptionPane.showMessageDialog(this, "Select stocks to sell less than stocks owned: " +  (this.No_of_Stocks_Owned));
        }
        
    }//GEN-LAST:event_btnCalculateTotal1ActionPerformed

    private void txtNoOfStocksSellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNoOfStocksSellActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoOfStocksSellActionPerformed

    private void txtGetTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGetTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGetTotalActionPerformed

    private void btnSellStocksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSellStocksActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        Object[] row = new Object[4];
        row[0] = this.Company_selected;
        
        row[1] = this.UserStockHistory.get(this.Company_selected).get(0);
        
        
        row[2] = this.No_of_Stocks_Owned - this.no_of_stocks_sell;
        this.No_of_Stocks_Owned = this.No_of_Stocks_Owned - this.no_of_stocks_sell;
        
        this.newTotal = (this.No_of_Stocks_Owned)*this.Current_Stock_price;
        row[3] = this.newTotal;
        this.Initial_wallet_balance = this.Initial_wallet_balance + this.newTotal;
        
        model.addRow(row);
        
        //TODO ; UPdate DB with new No_of_Stocks_Owned;
        //TODO: Calculate Wallet balance and update that too to the DB.
        JOptionPane.showMessageDialog(this, "Navigating to broker page to sell " +  (this.no_of_stocks_sell) + " stocks of " + (this.Company_selected));
        
        BrokerSellStocks brokerSellStocks = new BrokerSellStocks(this.Company_selected, this.No_of_Stocks_Owned, this.Initial_wallet_balance, this.no_of_stocks_sell, this.UserID);
        brokerSellStocks.setVisible(true);
        this.setVisible(false);
            
    }//GEN-LAST:event_btnSellStocksActionPerformed

    private void btnSignOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignOutActionPerformed
        // TODO add your handling code here:
        Home home = new Home();
        home.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_btnSignOutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserSellStocks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserSellStocks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserSellStocks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserSellStocks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserSellStocks().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalculateTotal1;
    private javax.swing.JButton btnSellStocks;
    private javax.swing.JButton btnSignOut;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel labelAdminID2;
    private javax.swing.JLabel labelAdminID3;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JTextField txtGetTotal;
    private javax.swing.JTextField txtNoOfStocksSell;
    // End of variables declaration//GEN-END:variables
}
